spring:
  application:
    name: "applicationservices"
  devtools:
    add-properties: false
  r2dbc:
    url: "r2dbc:postgresql://${POSTGRES_HOST:127.0.0.1}:${POSTGRES_PORT:5433}/${POSTGRES_DB:crediyapps}"
    username: "${POSTGRES_USER:hdj}"
    password: "${POSTGRES_PASSWORD:salsam2323}"
    pool:
      enabled: true
      initial-size: 2
      max-size: 20
      max-idle-time: "30m"
      validation-query: "SELECT 1"
  sql:
    init:
      mode: "always"
      schema-locations: "classpath:schema.sql"
postgres:
  host: "${POSTGRES_HOST:127.0.0.1}"
  port: "${POSTGRES_PORT:5433}"
  database: "${POSTGRES_DB:crediyapps}"
  schema: "public"
  username: "${POSTGRES_USER:hdj}"
  password: "${POSTGRES_PASSWORD:salsam2323}"
server:
  port: 8081
  error:
    include-message: "always"
management:
  endpoints:
    web:
      exposure:
        include: "health,prometheus"
  endpoint:
    health:
      probes:
        enabled: true
  health:
    circuitbreakers:
      enabled: true
cors:
  allowed-origins: "http://localhost:4200,http://localhost:8080"
logging:
  level:
    org.springframework.r2dbc: "DEBUG"
    bootcamp.reto.powerup.r2dbc: "DEBUG"
adapter:
  restconsumer:
    timeout: 5000
    url: "http://localhost:8080"
resilience4j:
  circuitbreaker:
    instances:
      testGet:
        registerHealthIndicator: true
        failureRateThreshold: 50
        slowCallRateThreshold: 50
        slowCallDurationThreshold: "2s"
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        minimumNumberOfCalls: 10
        waitDurationInOpenState: "10s"
      testPost:
        registerHealthIndicator: true
        failureRateThreshold: 50
        slowCallRateThreshold: 50
        slowCallDurationThreshold: "2s"
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        minimumNumberOfCalls: 10
        waitDurationInOpenState: "10s"
