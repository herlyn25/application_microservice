apply plugin: 'org.springframework.boot'

dependencies {
	implementation project(':sqs-listener')
	implementation project(':sqs-sender')
	implementation project(':metrics')
	implementation 'software.amazon.awssdk:sts'
	implementation project(':rest-consumer')

    // Projects
    implementation project(':reactive-web')
	implementation project(':r2dbc-postgresql')
    implementation project(':model')
    implementation project(':usecase')

    // Dependencies
    implementation 'me.paulschwarz:spring-dotenv:4.0.0'
    implementation 'org.reactivecommons.utils:object-mapper:0.1.0'
    implementation 'javax.validation:validation-api:2.0.1.Final' // Puedes usar otra versi√≥n si es necesario
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'com.google.code.gson:gson:2.10.1'


    // Development
    runtimeOnly('org.springframework.boot:spring-boot-devtools')
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // Tests
    testImplementation 'com.tngtech.archunit:archunit:1.4.1'
    testImplementation 'com.fasterxml.jackson.core:jackson-databind'
}

tasks.register('explodedJar', Copy) {
    with jar
    into layout.buildDirectory.dir("exploded")
}

jar {
    // To disable the *-plain.jar
    enabled = false
}

bootJar {
    // Sets output jar name
    archiveFileName = "${project.getParent().getName()}.${archiveExtension.get()}"
}